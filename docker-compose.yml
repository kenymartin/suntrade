# version: '3.9'
services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    # user: "vscode"
    ports:
      - "3004:80"
    volumes:
      - ./frontend:/workspace/reactprojects/frontend
      - ./shared:/workspace/reactprojects/shared
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./nginx.conf:/etc/nginx/nginx.conf
      # - ./html:/usr/share/nginx/html
    # command: ["nginx", "-g", "daemon off;"]


    container_name: suntrade-frontend
    restart: "no"
    privileged: true
    working_dir: /workspace/reactprojects
    # user: vscode
    environment:
      NODE_ENV: development
      DOCKER_HOST: unix:///var/run/docker.sock
      DEBUG: true
    tty: true          # Prevents automatic execution
    stdin_open: true   # Keep the session open
    depends_on:
      - main-server
    # command: ["bash", "-c", "exec bash"]

  main-server:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: main-server-dev
    ports:
      - "3000:3000"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      # - app_data:/app
      # - app_data:/workspace
      - .:/workspace
      - ./shared:/workspace/reactprojects/shared
      - ./.devcontainer/scripts:/workspace/reactprojects/.devcontainer/scripts
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/workspace/reactprojects/suntrade/backend/node_modules
    container_name: suntrade-main-server
    image: suntrade-main-server
    working_dir: /workspace/reactprojects
    user: vscode
    tty: true
    stdin_open: true
    environment:
      # DATABASE_URL: "postgresql://postgres:password@db:5432/spo"
      NODE_ENV: development
      DOCKER_HOST: unix:///var/run/docker.sock
      DEBUG: true
      NVM_DIR: /usr/local/share/nvm
    # networks:
    #   - suntrade-network
    # command: ["bash", "-c", "exec bash","chown -R vscode:vscode /workspace/reactprojects && su vscode"]
    command: ["/bin/bash", "-c", "source ~/.bashrc && exec bash"]
      # command: ["tail", "-f", "/dev/null"]  # Prevents main server from starting automatically
  
  auth-server:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: auth-server-dev
    ports:
      - "3001:3001"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./backend/auth-server:/workspace/reactprojects/auth-server
      - ./shared:/workspace/reactprojects/shared
      - ./.devcontainer/scripts:/workspace/reactprojects/.devcontainer/scripts
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: suntrade-auth-server
    working_dir: /workspace/reactprojects
    user: vscode
    tty: true
    stdin_open: true
    environment:
      NODE_ENV: development
      DOCKER_HOST: unix:///var/run/docker.sock
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DEBUG: true
      NVM_DIR: /usr/local/share/nvm
    # networks:
    #   - suntrade-network
    # command: ["bash", "-c", "exec bash","chown -R vscode:vscode /workspace/reactprojects && su vscode"]
    command: ["/bin/bash", "-c", "source ~/.bashrc && exec bash"]

  redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}
      
      ACCESS_TOKEN_SECRECT: ${ACCESS_TOKEN_SECRECT}
      REFRESH_TOKEN_SECRECT: ${REFRESH_TOKEN_SECRECT}
      REFRESH_TOKEN_EXPIRES_IN: ${REFRESH_TOKEN_EXPIRES_IN}
      ACCESS_TOKEN_SECRECT_EXPIRES_IN: ${ACCESS_TOKEN_SECRECT_EXPIRES_IN}
    volumes:
      - db_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: "always"
    # networks:
    #   - suntrade-network

volumes:
  # app_data:
  # suntrade_data:
  db_data:
    driver: local
# networks:
#   suntrade-network:
#     driver: bridge